{"version":3,"sources":["Canvas.js","LoginScreen.js","NextButton.js","PrevButton.js","AlbumSelect.js","Slider.js","ToggleButton.js","Settings.js","ViewerScreen.js","App.js","serviceWorker.js","index.js"],"names":["crypto","require","options","MyCanvas","props","componentDidUpdate","prevProps","url","setImage","canvas","document","getElementById","width","window","innerWidth","height","innerHeight","ctx","getContext","fillStyle","fillRect","a","console","log","axios","method","responseType","headers","listResult","encryptedData","Buffer","data","decryptedData","password","cryptKey","createHash","update","String","digest","substr","iv","alloc","cipher","createDecipheriv","from","concat","final","image","Image","onload","showImage","onerror","src","type","toString","error","wrh","newWidth","newHeight","x","y","drawImage","this","id","React","Component","Login","setSite","event","setState","site","target","value","setName","name","setPassword","validateForm","state","email","length","handleSubmit","preventDefault","updateCredentials","history","push","process","className","onSubmit","onChange","NextButton","onClick","handleOnNext","PrevButton","handleOnPrev","AlbumSelect","albums","map","album","key","selectedAlbum","handleChange","Slider","min","max","current","ToggleButton","handleOnToggle","user","settingUrl","config","imageserver","settingValue","settingResult","undefined","Viewer","handleAlbumChange","newActiveAlbum","Settings","saveSetting","username","loadImageList","imageList","showNewImage","handleSliderChange","activeAlbum","handleResize","activeImageIndex","index","imageUrl","baseUrl","newType","newImagePassword","endsWith","activeUrl","imageType","imageListLength","imagePassword","e","loadAlbumList","albumListUrl","albumResult","albumName","albumUrl","list","onNext","newActiveImageIndex","onPrev","onKey","which","keyCode","closeFullscreen","isInFullScreen","button","onRightClick","onWheel","deltaY","onShow","classList","remove","add","timeout","clearTimeout","setTimeout","onHide","handleFullscreenToggle","openFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","albumList","fullScreen","newAlbumList","loadSetting","newState","addEventListener","removeEventListener","Canvas","App","path","render","ViewerScreen","component","LoginScreen","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"+MAIMA,G,OAASC,EAAQ,MACjBC,EAAuB,SAEvBC,E,YAMF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAGVC,mBAAqB,SAACC,GAIlB,GAAuB,KAAnB,EAAKF,MAAMG,IACX,EAAKC,SAAS,EAAKJ,MAAMG,SACtB,CAEH,IAAIE,EAASC,SAASC,eAAe,YACrCF,EAAOG,MAAQC,OAAOC,WACtBL,EAAOM,OAASF,OAAOG,YAEvB,IAAIC,EAAMR,EAAOS,WAAW,MAC5BD,EAAIE,UAAY,OAChBF,EAAIG,SAAS,EAAE,EAAEX,EAAOG,MAAMH,EAAOM,UAlB1B,EA0BnBP,SA1BmB,sBA0BR,wCAAAa,EAAA,yDAEgB,KAAnB,EAAKjB,MAAMG,IAFR,uBAGHe,QAAQC,IAAR,yCAHG,iCAMPD,QAAQC,IAAR,uCAA4C,EAAKnB,MAAMG,MANhD,kBASoBiB,IAAM,CACzBC,OAAQ,MACRlB,IAAK,EAAKH,MAAMG,IAChBmB,aAAc,OACdC,QAAS,CAAE,8BAA+B,OAb3C,OASCC,EATD,OAkBCC,EAAgB,IAAIC,EAAOF,EAAWG,KAAM,UAC5CC,EAAgB,KAEQ,KAAxB,EAAK5B,MAAM6B,UACLC,EAAWlC,EAAOmC,WAAW,UAAUC,OAAOC,OAAO,EAAKjC,MAAM6B,WAAWK,OAAO,UAAUC,OAAO,EAAG,IACtGC,EAAKV,EAAOW,MAAM,GAAI,GACxBC,EAAS1C,EAAO2C,iBAAiBzC,EAAmBgC,EAAUM,GAElER,EAAgBF,EAAOc,KAAKF,EAAON,OAAOP,GAAgB,UAC1DG,EAAgBF,EAAOe,OAAO,CAACb,EAAeU,EAAOI,YAErDxB,QAAQC,IAAR,kDACAS,EAAgBH,IAGhBkB,EAAQ,IAAIC,OAEVC,OAAS,WACX,EAAKC,UAAUH,IAGnBA,EAAMI,QAAU,WAEZ,IAAI1C,EAASC,SAASC,eAAe,YACrCF,EAAOG,MAAQC,OAAOC,WACtBL,EAAOM,OAASF,OAAOG,YAEvB,IAAIC,EAAMR,EAAOS,WAAW,MAC5BD,EAAIE,UAAY,OAChBF,EAAIG,SAAS,EAAE,EAAEX,EAAOG,MAAMH,EAAOM,SAGzCgC,EAAMK,IAAM,cAAgB,EAAKhD,MAAMiD,KAAO,WAAa,IAAIvB,EAAOE,GAAesB,SAAS,UAlD3F,kDAoDHhC,QAAQiC,MAAR,+CApDG,0DA1BQ,EAkFnBL,UAAY,SAACH,GACT,IAAItC,EAASC,SAASC,eAAe,YACrCF,EAAOG,MAAQC,OAAOC,WACtBL,EAAOM,OAASF,OAAOG,YAEvB,IAAIC,EAAMR,EAAOS,WAAW,MAExBsC,EAAMT,EAAMnC,MAAQmC,EAAMhC,OAC1B0C,EAAWhD,EAAOG,MAClB8C,EAAYD,EAAWD,EACvBE,EAAYjD,EAAOM,SAEnB0C,GADAC,EAAYjD,EAAOM,QACIyC,GAG3B,IAAIG,EAAI,EACJC,EAAI,EAEJH,EAAWhD,EAAOG,QAClB+C,GAAKlD,EAAOG,MAAQ6C,GAAY,GAGhCC,EAAYjD,EAAOM,SACnB6C,GAAKnD,EAAOM,OAAS2C,GAAa,GAItCzC,EAAIG,SAAS,EAAG,EAAGX,EAAOG,MAAOH,EAAOM,QACxCE,EAAI4C,UAAUd,EAAOY,EAAGC,EAAGH,EAAUC,IA9GtB,E,iFAuBfI,KAAKtD,a,+BA2FL,OAAQ,4BAAQuD,GAAG,iB,GAxHJC,IAAMC,WA4Hd9D,Q,4VC3DA+D,E,YApEX,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAQV+D,QAAU,SAACC,GACP,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAVpB,EAanBC,QAAU,SAACL,GACP,EAAKC,SAAS,CAAEK,KAAMN,EAAMG,OAAOC,SAdpB,EAiBnBG,YAAc,SAACP,GACX,EAAKC,SAAS,CAAEpC,SAAUmC,EAAMG,OAAOC,SAlBxB,EAqBnBI,aAAe,WACX,OAAO,EAAKC,MAAMC,MAAMC,OAAS,GAAK,EAAKF,MAAM5C,SAAS8C,OAAS,GAtBpD,EAyBnBC,aAAe,SAACZ,GAEZA,EAAMa,iBACN,EAAK7E,MAAM8E,kBAAkB,EAAKL,MAAMP,KAAM,EAAKO,MAAMH,KAAM,EAAKG,MAAM5C,UAC1E,EAAK7B,MAAM+E,QAAQC,KAAKC,kBA3BxB,EAAKR,MAAQ,CACTP,KAAM,GACNI,KAAM,GACNzC,SAAU,IALC,E,sEAiCf,OACI,0BAAMqD,UAAU,kBAAkBC,SAAUzB,KAAKkB,cAC7C,yBAAKM,UAAU,cACX,2BAAOA,UAAU,0BAAjB,SACA,yBAAKA,UAAU,aACX,2BAAOA,UAAU,eAAevB,GAAG,OAC/BS,MAAOV,KAAKe,MAAMP,KAAMkB,SAAU1B,KAAKK,YAGnD,yBAAKmB,UAAU,cACX,2BAAOA,UAAU,0BAAjB,SACA,yBAAKA,UAAU,aACX,2BAAOA,UAAU,eAAevB,GAAG,OAC/BS,MAAOV,KAAKe,MAAMH,KAAMc,SAAU1B,KAAKW,YAGnD,yBAAKa,UAAU,cACX,2BAAOA,UAAU,0BAAjB,aACA,yBAAKA,UAAU,aACX,2BAAOjC,KAAK,WAAWiC,UAAU,eAAevB,GAAG,MAC/CS,MAAOV,KAAKe,MAAM5C,SAAUuD,SAAU1B,KAAKa,gBAGvD,yBAAKW,UAAU,cACX,yBAAKA,UAAU,6BACX,4BAAQjC,KAAK,SAASiC,UAAU,mBAAhC,iB,GA5DJtB,IAAMC,W,4DCaXwB,E,iLAXP,OACI,4BACI1B,GAAG,aACHuB,UAAU,4CACVI,QAAS5B,KAAK1D,MAAMuF,cAHxB,S,GAHa3B,IAAMC,WCahB2B,E,iLAXT,OACE,4BACI7B,GAAG,aACHuB,UAAU,4CACVI,QAAS5B,KAAK1D,MAAMyF,cAHxB,S,GAHiB7B,IAAMC,WCoBhB6B,E,iLAhBP,IAAM5F,EAAU4D,KAAK1D,MAAM2F,OAAOC,KAAI,SAACC,GAAD,OAClC,4BAAQC,IAAKD,EAAOzB,MAAOyB,GAASA,MAGxC,OACI,4BACElC,GAAG,cACHuB,UAAU,eACVd,MAAOV,KAAK1D,MAAM+F,cAClBX,SAAU1B,KAAK1D,MAAMgG,cAClBlG,O,GAdS8D,IAAMC,WCmBjBoC,E,iLAfP,OACI,yBAAKtC,GAAG,cAAcuB,UAAU,kBAC5B,2BACIA,UAAU,SACVvB,GAAG,UACHV,KAAK,QACLiD,IAAI,IACJC,IAAKzC,KAAK1D,MAAMmG,IAChB/B,MAAOV,KAAK1D,MAAMoG,QAClBhB,SAAU1B,KAAK1D,MAAMgG,oB,GAZpBpC,IAAMC,WCYZwC,E,iLAXP,OACI,4BACI1C,GAAG,eACHuB,UAAU,sCACVI,QAAS5B,KAAK1D,MAAMsG,gBAHxB,a,GAHe1C,IAAMC,W,4JCEJ0C,EAAMT,G,kFACvBU,E,iBAAuBC,EAAOC,Y,qBAAwBH,E,wBAAoBT,GAE1Ea,EAAe,G,kBAIWvF,IAAM,CAC5BC,OAAQ,MACRlB,IAAKqG,EACLlF,aAAc,OACdC,QAAS,CAAE,8BAA+B,O,OAJ1CqF,E,OAOJD,EAAeC,EAAcjF,K,gDAE7BT,QAAQC,IAAR,iCAAsC2E,IACtCa,EAAe,G,oBAGSE,WAAjBF,GAA+C,cAAjBA,IACrCzF,QAAQC,IAAR,gDAAqDoF,EAArD,qBAAsET,EAAtE,iCACAa,EAAe,IAGnBzF,QAAQC,IAAR,2CAAgD2E,EAAhD,aAAwDa,I,kBACjDA,G,6LAIeJ,EAAMT,EAAK1B,G,uEAC7BoC,E,iBAAuBC,EAAOC,Y,qBAAwBH,E,wBAAoBT,E,kBAAa1B,GAG3F,IACIhD,IAAM,CACFC,OAAQ,OACRlB,IAAKqG,EACLlF,aAAc,OACdC,QAAS,CAAE,8BAA+B,OAEhD,MAAO4B,GACLjC,QAAQC,IAAR,sCAA2CgC,I,6GC0WxC2D,E,YArXX,WAAY9G,GAAQ,IAAD,8BACf,4CAAMA,KAsBV+G,kBAvBmB,uCAuBC,WAAO/C,GAAP,eAAA/C,EAAA,6DACZ+F,EAAiBhD,EAAMG,OAAOC,MAClClD,QAAQC,IAAR,sBAAmC6F,GAEnCC,EAASC,YAAY,EAAKlH,MAAMmH,SAAU,YAAaH,GAJvC,SAMO,EAAKI,cAAcJ,GAN1B,OAMhB,EAAKK,UANW,OAchB,EAAKC,aAAaN,EAAgB,GAdlB,2CAvBD,wDAwCnBO,mBAAqB,SAACvD,GAElB,EAAKsD,aAAa,EAAK7C,MAAM+C,YAAaxD,EAAMG,OAAOC,QA1CxC,EA6CnBqD,aAAe,WAEX,EAAKH,aAAa,EAAK7C,MAAM+C,YAAa,EAAK/C,MAAMiD,mBA/CtC,EAkDnBJ,aAAe,SAACzB,EAAO8B,GAEnBV,EAASC,YAAY,EAAKlH,MAAMmH,SAAU,YAAaQ,GAEvD,IAAIC,EAAQ,UAAM,EAAKnD,MAAMoD,QAAjB,kCAAkDhC,EAAlD,sBAAqE,EAAKwB,UAAUM,IAE5FG,EAAU,GACVC,EAAmB,EAAKtD,MAAM5C,SAClC,IACI,EAAKwF,UAAUM,GAAOK,SAAS,OAC/BF,EAAU,OACH,EAAKT,UAAUM,GAAOK,SAAS,OACtCF,EAAU,MACH,EAAKT,UAAUM,GAAOK,SAAS,OACtCF,EAAU,MACH,EAAKT,UAAUM,GAAOK,SAAS,SAG/B,EAAKX,UAAUM,GAAOK,SAAS,QAFtCF,EAAU,OACVC,EAAmB,IAIZ,EAAKV,UAAUM,GAAOK,SAAS,QACtCF,EAAU,MACVC,EAAmB,IACZ,EAAKV,UAAUM,GAAOK,SAAS,SACtCF,EAAU,MACVC,EAAmB,IAGvB,EAAK9D,SAAS,CACVgE,UAAWL,EACXM,UAAWJ,EACXN,YAAa3B,EACbsC,gBAAiB,EAAKd,UAAU1C,OAChC+C,iBAAkBC,EAClBS,cAAeL,IACjB,MAAOM,GACLnH,QAAQC,IAAR,wCAA6CkH,MAvFlC,EAoJnBC,cApJmB,sBAoJH,8BAAArH,EAAA,6DACRsH,EAAe,EAAK9D,MAAMoD,QAAU,UAD5B,SAKYzG,IAAM,CAC1BC,OAAQ,MACRlB,IAAKoI,EACLjH,aAAc,OACdC,QAAS,CAAE,8BAA+B,OATlC,cAKRiH,EALQ,yBAYLA,EAAY7G,MAZP,2CApJG,EAmKnByF,cAnKmB,uCAmKH,WAAOqB,GAAP,mBAAAxH,EAAA,6DACRyH,EAAW,EAAKjE,MAAMoD,QAAU,oBAAsBY,EAGtDE,EAAO,GAJC,kBAMevH,IAAM,CACzBC,OAAQ,MACRlB,IAAKuI,EACLpH,aAAc,OACdC,QAAS,CAAE,8BAA+B,OAVtC,OAMJC,EANI,OAYRmH,EAAOnH,EAAWG,KAZV,gDAcRT,QAAQC,IAAR,+CAdQ,iCAiBLwH,GAjBK,yDAnKG,wDAuLnBC,OAAS,WAGL,GAFA1H,QAAQC,IAAI,uBAAyB,EAAKsD,MAAMiD,kBAE5C,EAAKjD,MAAMiD,iBAAmB,EAAKjD,MAAM0D,gBAAkB,EAAG,CAC9D,IAAIU,EAAsB,EAAKpE,MAAMiD,iBAErCmB,IAEA,EAAKvB,aAAa,EAAK7C,MAAM+C,YAAaqB,KA/L/B,EAmMnBC,OAAS,WAGL,GAFA5H,QAAQC,IAAI,uBAAyB,EAAKsD,MAAMiD,kBAE5C,EAAKjD,MAAMiD,iBAAmB,EAAG,CACjC,IAAImB,EAAsB,EAAKpE,MAAMiD,iBAAmB,EACxDmB,IAEA,EAAKvB,aAAa,EAAK7C,MAAM+C,YAAaqB,KA1M/B,EA8MnBE,MAAQ,SAAC/E,GACL,IAAIT,EAAIS,EAAMgF,OAAShF,EAAMiF,QAMnB,KAAN1F,GAAkB,KAANA,EACZ,EAAKqF,SACQ,KAANrF,EACP,EAAKuF,SACQ,KAANvF,GACP,EAAK2F,mBA1NM,EA8NnB5D,QAAU,SAACtB,GACP9C,QAAQC,IAAI,YACR,EAAKgI,kBACLjI,QAAQC,IAAI,kBAAmB6C,EAAMoF,QAChB,IAAjBpF,EAAMoF,OACN,EAAKN,SACmB,IAAjB9E,EAAMoF,OACb,EAAKpJ,MAAM+E,QAAQC,KAAKC,WACA,IAAjBjB,EAAMoF,QACb,EAAKR,UAGT1H,QAAQC,IAAI,iDA1OD,EA8OnBkI,aAAe,SAACrF,GAEZA,EAAMa,kBAhPS,EAmPnByE,QAAU,SAACtF,GACP9C,QAAQC,IAAI,oBAAqB6C,GAE7BA,EAAMuF,OAAS,EACf,EAAKT,SACE9E,EAAMuF,OAAS,EACtB,EAAKX,SAEL1H,QAAQC,IAAI,qCA3PD,EA+PnBqI,OAAS,WACL,IACS,EAAKL,kBAaN7I,SAASC,eAAe,eAAekJ,UAAUC,OAAO,aACxDpJ,SAASC,eAAe,eAAekJ,UAAUE,IAAI,cAbrDrJ,SAASC,eAAe,cAAckJ,UAAUC,OAAO,aACvDpJ,SAASC,eAAe,cAAckJ,UAAUC,OAAO,aACvDpJ,SAASC,eAAe,eAAekJ,UAAUC,OAAO,aACxDpJ,SAASC,eAAe,eAAekJ,UAAUC,OAAO,aACxDpJ,SAASC,eAAe,gBAAgBkJ,UAAUC,OAAO,aACzDpJ,SAASC,eAAe,cAAckJ,UAAUE,IAAI,YACpDrJ,SAASC,eAAe,cAAckJ,UAAUE,IAAI,YACpDrJ,SAASC,eAAe,eAAekJ,UAAUE,IAAI,YACrDrJ,SAASC,eAAe,eAAekJ,UAAUE,IAAI,YACrDrJ,SAASC,eAAe,gBAAgBkJ,UAAUE,IAAI,kBASrC9C,IAAjB,EAAK+C,SACLC,aAAa,EAAKD,SAGtB,EAAKA,QAAUE,YAAW,WACtB,EAAKC,WACN,KACL,MAAO1B,MA3RM,EA8RnB0B,OAAS,WACL,IACIzJ,SAASC,eAAe,cAAckJ,UAAUC,OAAO,YACvDpJ,SAASC,eAAe,cAAckJ,UAAUC,OAAO,YACvDpJ,SAASC,eAAe,eAAekJ,UAAUC,OAAO,YACxDpJ,SAASC,eAAe,eAAekJ,UAAUC,OAAO,YACxDpJ,SAASC,eAAe,gBAAgBkJ,UAAUC,OAAO,YACzDpJ,SAASC,eAAe,cAAckJ,UAAUE,IAAI,aACpDrJ,SAASC,eAAe,cAAckJ,UAAUE,IAAI,aACpDrJ,SAASC,eAAe,eAAekJ,UAAUE,IAAI,aACrDrJ,SAASC,eAAe,eAAekJ,UAAUE,IAAI,aACrDrJ,SAASC,eAAe,gBAAgBkJ,UAAUE,IAAI,aACxD,MAAOtB,MA1SM,EA6SnB2B,uBAAyB,WACjB,EAAKb,iBACL,EAAKD,kBAEL,EAAKe,kBAjTM,EAqTnBd,eAAiB,WACb,OAAQ7I,SAAS4J,mBAAoD,OAA/B5J,SAAS4J,mBAC1C5J,SAAS6J,yBAAgE,OAArC7J,SAAS6J,yBAC7C7J,SAAS8J,sBAA0D,OAAlC9J,SAAS8J,sBAC1C9J,SAAS+J,qBAAwD,OAAjC/J,SAAS+J,qBAzT/B,EA4TnBJ,eAAiB,WAEb,IAAIK,EAAShK,SAASiK,gBAElBD,EAAOE,kBACPF,EAAOE,oBACAF,EAAOG,qBACdH,EAAOG,uBACAH,EAAOI,wBACdJ,EAAOI,0BACAJ,EAAOK,qBACdL,EAAOK,uBAvUI,EA4UnBzB,gBAAkB,WAEV5I,SAASsK,eACTtK,SAASsK,iBACFtK,SAASuK,qBAChBvK,SAASuK,uBACFvK,SAASwK,oBAChBxK,SAASwK,sBACFxK,SAASyK,kBAChBzK,SAASyK,oBAnVb,EAAKtG,MAAQ,CACToD,QAAQ,8CAAD,OAAgD,EAAK7H,MAAMkE,KAA3D,qBAA4E,EAAKlE,MAAMmH,UAC9FtF,SAAU,EAAK7B,MAAM6B,SACrBoG,UAAW,GACX+C,UAAW,CAAC,OACZxD,YAAa,GACbE,iBAAkB,EAClBS,gBAAiB,EACjBD,UAAW,GACXE,cAAe,EAAKpI,MAAM6B,UAIF,KAAxB,EAAK7B,MAAMmH,WACXjG,QAAQC,IAAR,kCACA,EAAKnB,MAAM+E,QAAQC,KAAKC,YAE5B,EAAKoC,UAAY,GACjB,EAAK4D,YAAa,EApBH,E,qNA6FfvH,KAAKkG,QAAUE,YAAW,WACtB,EAAKC,WACN,K,kBAI0BrG,KAAK4E,gB,cAA1B4C,E,gBAEuBjE,EAASkE,YAAYzH,KAAK1D,MAAMmH,SAAU,a,aAC9C,MADnBH,E,UAEAA,EAAiBkE,EAAa,GAC9BjE,EAASC,YAAYxD,KAAK1D,MAAMmH,SAAU,YAAaH,I,UAEpCtD,KAAK0D,cAAcJ,G,eAA1CtD,KAAK2D,U,iBAE2BJ,EAASkE,YAAYzH,KAAK1D,MAAMmH,SAAU,a,QAC9C,MADxB0B,E,UAEA3H,QAAQC,IAAR,sEACA0H,EAAsB,GAG1BnF,KAAK4D,aAAaN,EAAgB6B,GAE9BuC,EAAW,CACXJ,UAAWE,GAGfxH,KAAKO,SAASmH,G,kDAIdlK,QAAQC,IAAR,8EACqB0F,IAAjBnD,KAAKkG,SACLC,aAAanG,KAAKkG,SAEtBlG,KAAK1D,MAAM+E,QAAQC,KAAKC,W,QAG5B3E,SAAS+K,iBAAiB,UAAW3H,KAAKqF,OAC1CzI,SAAS+K,iBAAiB,QAAS3H,KAAK4F,SACxChJ,SAAS+K,iBAAiB,YAAa3H,KAAK8F,QAC5ClJ,SAAS+K,iBAAiB,YAAa3H,KAAK4B,SAC5ChF,SAAS+K,iBAAiB,cAAe3H,KAAK2F,cAC9C5I,OAAO4K,iBAAiB,SAAU3H,KAAK+D,c,6JAIvCnH,SAASgL,oBAAoB,UAAW5H,KAAKqF,OAC7CzI,SAASgL,oBAAoB,QAAS5H,KAAK4F,SAC3ChJ,SAASgL,oBAAoB,YAAa5H,KAAK8F,QAC/ClJ,SAASgL,oBAAoB,YAAa5H,KAAK4B,SAC/ChF,SAASgL,oBAAoB,cAAe5H,KAAK2F,cACjD/I,SAASgL,oBAAoB,SAAU5H,KAAK+D,gB,+BA8M5C,OACI,yBAAK9D,GAAG,WAAWuB,UAAU,UACzB,kBAAC,EAAD,CACIa,cAAerC,KAAKe,MAAM+C,YAC1BxB,aAActC,KAAKqD,kBACnBpB,OAAQjC,KAAKe,MAAMuG,YAGvB,kBAACO,EAAA,EAAD,CAAQpL,IAAKuD,KAAKe,MAAMwD,UAAWpG,SAAU6B,KAAKe,MAAM2D,cAAenF,KAAMS,KAAKe,MAAMyD,YAExF,kBAAC,EAAD,CAAY3C,aAAc7B,KAAKkF,SAE/B,kBAAC,EAAD,CAAYnD,aAAc/B,KAAKoF,SAE/B,kBAAC,EAAD,CAAQ3C,IAAKzC,KAAKe,MAAM0D,gBAAkB,EAAG/B,QAAS1C,KAAKe,MAAMiD,iBAAkB1B,aAActC,KAAK6D,qBAEtG,kBAAC,EAAD,CAAcjB,eAAgB5C,KAAKsG,8B,GAvX9BpG,IAAMC,WCoCZ2H,E,YAnDX,WAAYxL,GAAQ,IAAD,8BACf,4CAAMA,KAQV8E,kBAAoB,SAACZ,EAAMiD,EAAUtF,GACjCX,QAAQC,IAAR,yCAA8C+C,EAA9C,wBAAkEiD,EAAlE,wBAA0FtF,IAC1F,EAAKoC,SAAS,CAACC,KAAMA,EAAMiD,SAAUA,EAAUtF,SAAUA,KATzD,EAAK4C,MAAQ,CACTP,KAAM,GACNiD,SAAU,GACVtF,SAAU,IALC,E,sEAqBT,IAAD,OAEL,OADAX,QAAQC,IAAR,mCAAwC8D,WAEpC,kBAAC,IAAD,KACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwG,KAAMxG,gBACTyG,OAAQ,SAAC1L,GAAD,OACJ,kBAAC2L,EAAD,iBAAkB3L,EAAlB,CACAkE,KAAM,EAAKO,MAAMP,KACjBiD,SAAU,EAAK1C,MAAM0C,SACrBtF,SAAU,EAAK4C,MAAM5C,SACrB+J,UAAWD,QAGnB,kBAAC,IAAD,CAAOF,KAAMxG,UAETyG,OAAQ,SAAC1L,GAAD,OACJ,kBAAC6L,EAAD,iBAAiB7L,EAAjB,CACA8E,kBAAmB,EAAKA,+B,GA3CtClB,IAAMC,WCEJiI,QACW,cAA7BrL,OAAOsL,SAASC,UAEe,UAA7BvL,OAAOsL,SAASC,UAEhBvL,OAAOsL,SAASC,SAASC,MACvB,2DCZNC,IAASR,OAAQ,kBAAE,EAAF,MAAYpL,SAASC,eAAe,SD6H/C,kBAAmB4L,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtJ,GACLjC,QAAQiC,MAAMA,EAAMuJ,a","file":"static/js/main.71ca3ec5.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './Canvas.css';\r\n\r\nconst crypto = require('crypto');\r\nconst options = { algorithm: 'aes256' };\r\n\r\nclass MyCanvas extends React.Component {\r\n    // Important props:\r\n    // url - full path\r\n    // type - jpeg, png, gif\r\n    // password - Crypt password (optional)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props); // url = full url to image \r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        // if (prevProps. !== this.props.text) {\r\n        //console.log(\"Canvas - componentDidUpdate: \" + this.props.url);\r\n        // }\r\n        if (this.props.url !== \"\") {\r\n            this.setImage(this.props.url);\r\n        } else {\r\n            //console.log(`Canvas - Blank URL, skipping.`);\r\n            let canvas = document.getElementById(\"myCanvas\");\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = \"grey\";\r\n            ctx.fillRect(0,0,canvas.width,canvas.height);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setImage();\r\n    }\r\n\r\n    setImage = async () => {\r\n        \r\n        if (this.props.url === \"\") {\r\n            console.log(`Canvas::setImage Blank url, Skipping.`);\r\n            return;\r\n        }\r\n        console.log(`Canvas::setImage Retreiving: ${this.props.url}`);\r\n        \r\n        try {\r\n            let listResult = await axios({\r\n                method: 'get',\r\n                url: this.props.url,\r\n                responseType: 'text',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            });\r\n\r\n            //console.log(listResult.data);\r\n\r\n            let encryptedData = new Buffer(listResult.data, 'base64');\r\n            let decryptedData = null;\r\n\r\n            if (this.props.password !== \"\") {\r\n                const cryptKey = crypto.createHash('sha256').update(String(this.props.password)).digest('base64').substr(0, 32); // 32 bytes\r\n                const iv = Buffer.alloc(16, 0); \r\n                var cipher = crypto.createDecipheriv(options.algorithm, cryptKey, iv);\r\n            \r\n                decryptedData = Buffer.from(cipher.update(encryptedData), 'binary');\r\n                decryptedData = Buffer.concat([decryptedData, cipher.final()]);\r\n            } else {\r\n                console.log(`Canvas::setImage: No key, Skipping decryption.`)\r\n                decryptedData = encryptedData\r\n            }\r\n\r\n            let image = new Image();\r\n            \r\n            image.onload = () => {\r\n                this.showImage(image);\r\n            } \r\n\r\n            image.onerror = () => {\r\n                //console.log(`Canvas - onerror()`);\r\n                let canvas = document.getElementById(\"myCanvas\");\r\n                canvas.width = window.innerWidth;\r\n                canvas.height = window.innerHeight;\r\n    \r\n                let ctx = canvas.getContext(\"2d\");\r\n                ctx.fillStyle = \"grey\";\r\n                ctx.fillRect(0,0,canvas.width,canvas.height);\r\n            }    \r\n            \r\n            image.src = \"data:image/\" + this.props.type + \";base64,\" + new Buffer(decryptedData).toString('base64');\r\n        } catch(error) {\r\n            console.error(`Viewer::loadImageList failed: ${error}`);\r\n        }\r\n    }\r\n\r\n    showImage = (image) => {\r\n        let canvas = document.getElementById(\"myCanvas\");\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        var wrh = image.width / image.height;\r\n        var newWidth = canvas.width;\r\n        var newHeight = newWidth / wrh;\r\n        if (newHeight > canvas.height) {\r\n            newHeight = canvas.height;\r\n            newWidth = newHeight * wrh;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        if (newWidth < canvas.width) {\r\n            x = (canvas.width - newWidth) / 2;\r\n        }\r\n\r\n        if (newHeight < canvas.height) {\r\n            y = (canvas.height - newHeight) / 2;\r\n        }\r\n\r\n        //ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(image, x, y, newWidth, newHeight);\r\n    }\r\n\r\n    render() {\r\n        return (<canvas id=\"myCanvas\"></canvas>);\r\n    }\r\n}\r\n\r\nexport default MyCanvas;","import React from 'react';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            site: \"\",\r\n            name: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    setSite = (event) => {\r\n        this.setState({ site: event.target.value });\r\n    }\r\n\r\n    setName = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    setPassword = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.email.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        //console.log(\"Login handleSubmit\");\r\n        event.preventDefault();\r\n        this.props.updateCredentials(this.state.site, this.state.name, this.state.password);\r\n        this.props.history.push(process.env.PUBLIC_URL + '/viewer'); // <Route path={process.env.PUBLIC_URL + \"/viewer\"} \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-horizontal\" onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\" >Site:</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\" id=\"site\"\r\n                            value={this.state.site} onChange={this.setSite} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\" >Name:</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input className=\"form-control\" id=\"name\"\r\n                            value={this.state.name} onChange={this.setName} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label col-sm-2\">Password:</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\" className=\"form-control\" id=\"pwd\"\r\n                            value={this.state.password} onChange={this.setPassword} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"col-sm-offset-2 col-sm-10\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nclass NextButton extends React.Component {    \r\n    render() {\r\n        return (\r\n            <button\r\n                id=\"nextButton\"\r\n                className=\"btn btn-primary  btn-lg float-button-next\"\r\n                onClick={this.props.handleOnNext}>\r\n                &gt;\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NextButton;","import React from 'react';\r\n\r\nclass PrevButton extends React.Component {  \r\n    render() {\r\n      return (\r\n        <button\r\n            id=\"prevButton\" \r\n            className=\"btn btn-primary  btn-lg float-button-prev\"\r\n            onClick={this.props.handleOnPrev}>\r\n            &lt;\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default PrevButton;","import React from 'react';\r\n\r\nclass AlbumSelect extends React.Component {\r\n    \r\n    render() {\r\n        //console.log(\"AlbumSelect: albums: \" + this.props.albums + \" Active: \" + this.props.selectedAlbum);\r\n        const options = this.props.albums.map((album) =>\r\n            <option key={album} value={album} >{album}</option>,\r\n        );\r\n\r\n        return (\r\n            <select \r\n              id=\"albumSelect\" \r\n              className=\"float-select\" \r\n              value={this.props.selectedAlbum} \r\n              onChange={this.props.handleChange}>\r\n                {options}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumSelect;","/* eslint-disable no-useless-constructor */\r\nimport React from 'react';\r\n\r\nclass Slider extends React.Component {\r\n    render() {\r\n        // console.log(`Slider: Max: ${this.props.max} Current :${this.props.current}`);\r\n        return (\r\n            <div id=\"imageSlider\" className=\"slidecontainer\">\r\n                <input\r\n                    className=\"slider\"\r\n                    id=\"myRange\"\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max={this.props.max}\r\n                    value={this.props.current}\r\n                    onChange={this.props.handleChange} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nclass ToggleButton extends React.Component {    \r\n    render() {\r\n        return (\r\n            <button\r\n                id=\"toggleButton\"\r\n                className=\"btn btn-primary float-button-toggle\"\r\n                onClick={this.props.handleOnToggle}>\r\n                [ - ]\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleButton;","import axios from 'axios';\r\nimport config from \"./config.json\";\r\n\r\nexport default class {\r\n    static async loadSetting(user, key) {\r\n        let settingUrl = `http://${config.imageserver}/api/user/${user}/setting/key/${key}`;\r\n\r\n        let settingValue = \"\";\r\n\r\n        try {\r\n            // Load the list of albums\r\n            let settingResult = await axios({\r\n                method: 'get',\r\n                url: settingUrl,\r\n                responseType: 'text',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            })\r\n            //console.log(settingResult);\r\n            settingValue = settingResult.data;\r\n        } catch (error) {\r\n            console.log(`loadSetting caught for ${key}`)\r\n            settingValue = \"\";\r\n        }\r\n\r\n        if (typeof settingValue === undefined || settingValue === \"undefined\") {\r\n            console.log(`Settings::loadSetting query for user: ${user} and key: ${key} is undefined, setting to \"\"`);\r\n            settingValue = \"\";\r\n        }\r\n\r\n        console.log(`Settings: loadSetting result for ${key}: ${settingValue}`);\r\n        return settingValue;\r\n    }\r\n\r\n    // /api/user/:user/setting/key/:key/value/:value\r\n    static async saveSetting (user, key, value) {\r\n        let settingUrl = `http://${config.imageserver}/api/user/${user}/setting/key/${key}/value/${value}`;\r\n\r\n        // Fire and don't wait\r\n        try {\r\n            axios({\r\n                method: 'post',\r\n                url: settingUrl,\r\n                responseType: 'json',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            })\r\n        } catch (error) {\r\n            console.log(`Viewer::saveSetting failed: ${error}`)\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport Canvas from './Canvas';\r\nimport NextButton from './NextButton';\r\nimport PrevButton from './PrevButton';\r\nimport AlbumSelect from './AlbumSelect';\r\nimport Slider from \"./Slider\";\r\nimport ToggleButton from './ToggleButton';\r\nimport Settings from \"./Settings\";\r\n//import config from \"./config.json\";\r\n\r\n// First load - ComponenDidMount\r\n//   - Load the list of albums\r\n//       - Update state albumList\r\n//       - Update state activeAlbum\r\n//       - Load imageList\r\n//           - Update local imageList\r\n//           - Update state mageListLength\r\n//           - Update state activeImageIndex\r\n// HandleAlbumChange\r\n//   - Update state activeAlbum\r\n//       - Load imageList\r\n//           - Update local imageList\r\n//           - Update state mageListLength\r\n//           - Update state activeImageIndex\r\n\r\nclass Viewer extends React.Component {\r\n\r\n    // AlbumList []       - state  - Shared with Selec-\r\n    // imageList []       - local  - \r\n    // imageListLength    - state  - Shared with Slider\r\n    // activeAlbum        - state  - Shared with Select\r\n    // activeImageIndex   - state  - Shared with slider\r\n    // activeUrl          - state  - Shared with Canvas\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            baseUrl: `https://cors-anywhere.herokuapp.com/http://${this.props.site}/api/user/${this.props.username}`,\r\n            password: this.props.password,\r\n            activeUrl: \"\",\r\n            albumList: [\"foo\"],\r\n            activeAlbum: \"\",\r\n            activeImageIndex: 0,\r\n            imageListLength: 0,\r\n            imageType: \"\",\r\n            imagePassword: this.props.password\r\n        };\r\n\r\n        //console.log(`Viewer::Viewer - username=${this.props.username} password=${this.state.password}`);\r\n        if (this.props.username === \"\") {\r\n            console.log(`No username.  Pushing to login`);\r\n            this.props.history.push(process.env.PUBLIC_URL + \"/\");\r\n        }\r\n        this.imageList = [];\r\n        this.fullScreen = false;\r\n    }\r\n\r\n    handleAlbumChange = async (event) => {\r\n        let newActiveAlbum = event.target.value;\r\n        console.log(`New Album selected:`, newActiveAlbum);\r\n\r\n        Settings.saveSetting(this.props.username, \"lastAlbum\", newActiveAlbum);\r\n\r\n        this.imageList = await this.loadImageList(newActiveAlbum);\r\n\r\n        // this.setState({\r\n        //     activeAlbum: newActiveAlbum,\r\n        //     imageListLength: this.imageList.length,\r\n        //     activeImageIndex: 0\r\n        // });\r\n\r\n        this.showNewImage(newActiveAlbum, 0);\r\n    };\r\n\r\n    handleSliderChange = (event) => {\r\n        //console.log(`Viewer::handlSliderChange - New: ${event.target.value}, Max: ${this.state.imageListLength}`);\r\n        this.showNewImage(this.state.activeAlbum, event.target.value);\r\n    }\r\n\r\n    handleResize = () => {\r\n        //console.log(\"Viewer::handleResize\");\r\n        this.showNewImage(this.state.activeAlbum, this.state.activeImageIndex);\r\n    }\r\n\r\n    showNewImage = (album, index) => {\r\n        //console.log(`Viewer::showNewImage: user=${this.props.username} album=${album} index=${index} image=${this.imageList[index]}`)\r\n        Settings.saveSetting(this.props.username, \"lastIndex\", index);\r\n        \r\n        var imageUrl = `${this.state.baseUrl}/base64Image/albumName/${album}/imageName/${this.imageList[index]}`;\r\n\r\n        let newType = \"\";\r\n        let newImagePassword = this.state.password;\r\n        try {\r\n        if (this.imageList[index].endsWith(\"daj\")) {\r\n            newType = \"jpeg\";\r\n        } else if (this.imageList[index].endsWith(\"dag\")) {\r\n            newType = \"gif\";\r\n        } else if (this.imageList[index].endsWith(\"dap\")) {\r\n            newType = \"png\";\r\n        } else if (this.imageList[index].endsWith(\"jpeg\")) {\r\n            newType = \"jpeg\";\r\n            newImagePassword = \"\";\r\n        } else if (this.imageList[index].endsWith(\"jpg\")) {\r\n            newType = \"jpeg\";\r\n            newImagePassword = \"\";\r\n        } else if (this.imageList[index].endsWith(\"png\")) {\r\n            newType = \"png\";\r\n            newImagePassword = \"\";\r\n        } else if (this.imageList[index].endsWith(\"gif\")) {\r\n            newType = \"gif\";\r\n            newImagePassword = \"\";\r\n        }\r\n\r\n        this.setState({ \r\n            activeUrl: imageUrl, \r\n            imageType: newType, \r\n            activeAlbum: album,\r\n            imageListLength: this.imageList.length,\r\n            activeImageIndex: index,\r\n            imagePassword: newImagePassword });\r\n        } catch (e) {\r\n            console.log(`ShowNewImage failed, skipping ${e}`);\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.timeout = setTimeout(() => {\r\n            this.onHide();\r\n        }, 3000);\r\n\r\n        // Load the list of albums\r\n        try {\r\n            let newAlbumList = await this.loadAlbumList();\r\n\r\n            let newActiveAlbum = await Settings.loadSetting(this.props.username, \"lastAlbum\");\r\n            if (newActiveAlbum === \"\") {\r\n                newActiveAlbum = newAlbumList[0];\r\n                Settings.saveSetting(this.props.username, \"lastAlbum\", newActiveAlbum);\r\n            }\r\n            this.imageList = await this.loadImageList(newActiveAlbum);\r\n\r\n            let newActiveImageIndex = await Settings.loadSetting(this.props.username, \"lastIndex\");\r\n            if (newActiveImageIndex === \"\") {\r\n                console.log(`Viewer::componentDidMount: newActiveImageIndex blank, setting to 0`)\r\n                newActiveImageIndex = 0;\r\n            }\r\n\r\n            this.showNewImage(newActiveAlbum, newActiveImageIndex);\r\n\r\n            let newState = {\r\n                albumList: newAlbumList,\r\n            };\r\n\r\n            this.setState(newState);\r\n\r\n        } catch (error) {\r\n            // handle error\r\n            console.log(`Viewer::componentDidMount Catch = ${error}.  Pushing to login`);\r\n            if (this.timeout !== undefined) {\r\n                clearTimeout(this.timeout);\r\n            }\r\n            this.props.history.push(process.env.PUBLIC_URL + \"/\");\r\n        };\r\n\r\n        document.addEventListener('keydown', this.onKey);\r\n        document.addEventListener('wheel', this.onWheel);\r\n        document.addEventListener('mousemove', this.onShow);\r\n        document.addEventListener('mousedown', this.onClick);\r\n        document.addEventListener('contextmenu', this.onRightClick);\r\n        window.addEventListener('resize', this.handleResize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.onKey);\r\n        document.removeEventListener('wheel', this.onWheel);\r\n        document.removeEventListener('mousemove', this.onShow);\r\n        document.removeEventListener('mousedown', this.onClick);\r\n        document.removeEventListener('contextmenu', this.onRightClick);\r\n        document.removeEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    loadAlbumList = async () => {\r\n        let albumListUrl = this.state.baseUrl + \"/albums\";\r\n        //console.log(\"Viewer loadAlbumList albumUrl: \" + albumListUrl);\r\n\r\n        // Load the list of albums\r\n        let albumResult = await axios({\r\n            method: 'get',\r\n            url: albumListUrl,\r\n            responseType: 'json',\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n\r\n        return albumResult.data;\r\n    }\r\n\r\n    loadImageList = async (albumName) => {\r\n        var albumUrl = this.state.baseUrl + \"/album/albumName/\" + albumName;\r\n        //console.log(\"Viewer loadImageList albumUrl: \" + albumUrl);\r\n\r\n        let list = [];\r\n        try {\r\n            let listResult = await axios({\r\n                method: 'get',\r\n                url: albumUrl,\r\n                responseType: 'json',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            });\r\n            list = listResult.data;\r\n        } catch (error) {\r\n            console.log(`Viewer::loadImageList failed: ${error}`)\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    onNext = () => {\r\n        console.log(\"App: onNext, index: \" + this.state.activeImageIndex);\r\n\r\n        if (this.state.activeImageIndex < this.state.imageListLength - 1) {\r\n            let newActiveImageIndex = this.state.activeImageIndex;\r\n            // Adding 1 to activeImageIndex on the line above sometimes produced \"01\"\r\n            newActiveImageIndex++;\r\n\r\n            this.showNewImage(this.state.activeAlbum, newActiveImageIndex);\r\n        }\r\n    }\r\n\r\n    onPrev = () => {\r\n        console.log(\"App: onPrev, index: \" + this.state.activeImageIndex);\r\n\r\n        if (this.state.activeImageIndex > 0) {\r\n            let newActiveImageIndex = this.state.activeImageIndex - 1;\r\n            newActiveImageIndex--; \r\n\r\n            this.showNewImage(this.state.activeAlbum, newActiveImageIndex);\r\n        }\r\n    }\r\n\r\n    onKey = (event) => {\r\n        var x = event.which || event.keyCode;\r\n\r\n        // space: 32       Enter: 13     Esc:   27\r\n        // Up:    38       Down:  40\r\n        // Right: 39       Left:  37\r\n\r\n        if (x === 32 || x === 39) {\r\n            this.onNext();\r\n        } else if (x === 37) {\r\n            this.onPrev();\r\n        } else if (x === 27) {\r\n            this.closeFullscreen();\r\n        }\r\n    }\r\n\r\n    onClick = (event) => {\r\n        console.log(\"onClick.\");\r\n        if (this.isInFullScreen()) {\r\n            console.log(\"Viewer::onClick\", event.button);\r\n            if (event.button === 0) {\r\n                this.onPrev();\r\n            } else if (event.button === 1) {\r\n                this.props.history.push(process.env.PUBLIC_URL + \"/\");\r\n            } else if (event.button === 2) {\r\n                this.onNext();\r\n            }\r\n        } else {\r\n            console.log(\"Skipping mouse click when not in full screen\")\r\n        }\r\n    }\r\n\r\n    onRightClick = (event) => {\r\n        // Disable the regular context menu\r\n        event.preventDefault(); \r\n    }\r\n\r\n    onWheel = (event) => {\r\n        console.log(\"Viewer::onWheel: \", event);\r\n\r\n        if (event.deltaY < 0) {\r\n            this.onPrev();\r\n        } else if (event.deltaY > 0) {\r\n            this.onNext();\r\n        } else {\r\n            console.log(\"Viewer::onWheel - not an up/down\");\r\n        }\r\n    }\r\n\r\n    onShow = () => {\r\n        try {\r\n            if (!this.isInFullScreen()) {\r\n                document.getElementById(\"prevButton\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"nextButton\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"albumSelect\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"imageSlider\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"toggleButton\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"prevButton\").classList.add(\"m-fadeIn\");\r\n                document.getElementById(\"nextButton\").classList.add(\"m-fadeIn\");\r\n                document.getElementById(\"albumSelect\").classList.add(\"m-fadeIn\");\r\n                document.getElementById(\"imageSlider\").classList.add(\"m-fadeIn\");\r\n                document.getElementById(\"toggleButton\").classList.add(\"m-fadeIn\");\r\n            } else {\r\n                // just the slider\r\n                document.getElementById(\"imageSlider\").classList.remove(\"m-fadeOut\");\r\n                document.getElementById(\"imageSlider\").classList.add(\"m-fadeIn\");\r\n            }\r\n\r\n            // Here we use a class variable (this.timeout) because we don't want to trigger \r\n            // a re-render that would happen if we changed a state variable.\r\n            if (this.timeout !== undefined) {\r\n                clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.onHide();\r\n            }, 2000);\r\n        } catch (e) { }\r\n    }\r\n\r\n    onHide = () => {\r\n        try {\r\n            document.getElementById(\"prevButton\").classList.remove(\"m-fadeIn\");\r\n            document.getElementById(\"nextButton\").classList.remove(\"m-fadeIn\");\r\n            document.getElementById(\"albumSelect\").classList.remove(\"m-fadeIn\");\r\n            document.getElementById(\"imageSlider\").classList.remove(\"m-fadeIn\");\r\n            document.getElementById(\"toggleButton\").classList.remove(\"m-fadeIn\");\r\n            document.getElementById(\"prevButton\").classList.add(\"m-fadeOut\");\r\n            document.getElementById(\"nextButton\").classList.add(\"m-fadeOut\");\r\n            document.getElementById(\"albumSelect\").classList.add(\"m-fadeOut\");\r\n            document.getElementById(\"imageSlider\").classList.add(\"m-fadeOut\");\r\n            document.getElementById(\"toggleButton\").classList.add(\"m-fadeOut\");\r\n        } catch (e) { }\r\n    }\r\n\r\n    handleFullscreenToggle = () => {\r\n        if (this.isInFullScreen()) {\r\n            this.closeFullscreen();\r\n        } else {\r\n            this.openFullscreen();\r\n        }\r\n    }\r\n\r\n    isInFullScreen = () => {\r\n        return (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n            (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||\r\n            (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||\r\n            (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    }\r\n\r\n    openFullscreen = () => {\r\n        //console.log(\"openFullScreen\");\r\n        var docElm = document.documentElement;\r\n\r\n        if (docElm.requestFullscreen) {\r\n            docElm.requestFullscreen();\r\n        } else if (docElm.mozRequestFullScreen) {\r\n            docElm.mozRequestFullScreen();\r\n        } else if (docElm.webkitRequestFullScreen) {\r\n            docElm.webkitRequestFullScreen();\r\n        } else if (docElm.msRequestFullscreen) {\r\n            docElm.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    /* Close fullscreen */\r\n    closeFullscreen = () => {\r\n        //console.log(\"closeFullScreen\");\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    // The tabIndex=\"0\" is needed to get onKeyDown to work\r\n    //onKeyDown={this.onKey}\r\n    //            onMouseMove={this.onShow}\r\n    //            tabIndex=\"0\"\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"myViewer\" className=\"Viewer\">\r\n                <AlbumSelect\r\n                    selectedAlbum={this.state.activeAlbum}\r\n                    handleChange={this.handleAlbumChange}\r\n                    albums={this.state.albumList}\r\n                />\r\n\r\n                <Canvas url={this.state.activeUrl} password={this.state.imagePassword} type={this.state.imageType} />\r\n\r\n                <NextButton handleOnNext={this.onNext} />\r\n\r\n                <PrevButton handleOnPrev={this.onPrev} />\r\n\r\n                <Slider max={this.state.imageListLength - 1} current={this.state.activeImageIndex} handleChange={this.handleSliderChange} />\r\n\r\n                <ToggleButton handleOnToggle={this.handleFullscreenToggle} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Viewer;","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport LoginScreen from \"./LoginScreen\"\r\nimport ViewerScreen from \"./ViewerScreen\"\r\n\r\n// class Viewer extends React.Component {\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            site: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n        };\r\n    }\r\n\r\n    updateCredentials = (site, username, password) => {\r\n        console.log(`App::updateCredentials: site = ${site}, username = ${username}, password = ${password}`);\r\n        this.setState({site: site, username: username, password: password});\r\n    }\r\n\r\n    // The real workhorse of React Router is the History library. Under the hood, it’s what’s keeping track \r\n    // of session history for React Router. When a component is rendered by React Router, \r\n    // that component is passed three different props: location, match, and history. This history prop comes \r\n    // from the History library and has a ton of fancy properties on it related to routing. In this case, \r\n    // the one we’re interested in is history.push. What it does is it pushes a new entry into the history stack \r\n    // - aka redirecting the user to another route.\r\n    // The {...props} below pushs all the props down to the subordinate screens including 'history' OR NOT\r\n    render() {\r\n        console.log(`App::render - PUBLIC_URL=${process.env.PUBLIC_URL}`)\r\n        return(\r\n            <Router>\r\n                <div>\r\n                    {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\r\n                    <Switch>\r\n                        <Route path={process.env.PUBLIC_URL + \"/viewer\"} \r\n                            render={(props) =>\r\n                                <ViewerScreen {...props}\r\n                                site={this.state.site}\r\n                                username={this.state.username} \r\n                                password={this.state.password} \r\n                                component={ViewerScreen} />\r\n                            }\r\n                        />\r\n                        <Route path={process.env.PUBLIC_URL + '/'}\r\n                        \r\n                            render={(props) => \r\n                                <LoginScreen {...props} \r\n                                updateCredentials={this.updateCredentials} />\r\n                            }                         \r\n                        />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); "],"sourceRoot":""}