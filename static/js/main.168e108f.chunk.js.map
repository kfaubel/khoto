{"version":3,"sources":["components/Canvas.js","LoginScreen.js","components/NextButton.js","components/PrevButton.js","components/AlbumSelect.js","components/Slider.js","components/ToggleButton.js","Settings.js","ViewerScreen.js","App.js","serviceWorker.js","index.js"],"names":["crypto","require","options","MyCanvas","props","componentDidUpdate","prevProps","url","console","log","canvas","document","getElementById","width","window","innerWidth","height","innerHeight","ctx","getContext","fillStyle","fillRect","image","showImage","setImage","a","axios","method","responseType","headers","listResult","encryptedData","Buffer","data","decryptedData","password","cryptKey","createHash","update","String","digest","substr","iv","alloc","cipher","createDecipheriv","from","concat","final","Image","onload","onerror","src","type","toString","error","wrh","newWidth","newHeight","x","y","drawImage","this","id","React","Component","Login","setValue","event","target","setState","site","value","name","warn","validateForm","state","length","handleSubmit","preventDefault","updateCredentials","className","Container","Row","Col","sm","xs","lg","Form","onSubmit","Group","as","controlId","Label","column","span","offset","Control","placeholder","onChange","loginMessage","Button","disabled","message","NextButton","onClick","handleOnNext","PrevButton","handleOnPrev","AlbumSelect","albums","map","album","selectedAlbum","handleChange","Slider","min","max","current","ToggleButton","handleOnToggle","loadSetting","host","user","key","settingUrl","config","httpsProxy","settingValue","settingResult","undefined","saveSetting","Viewer","handleAlbumChange","newActiveAlbum","loadImageList","imageList","assignNewImageUrl","handleSliderChange","imageListLength","activeAlbum","handleResize","activeImageIndex","index","imageUrl","baseUrl","newType","newImagePassword","endsWith","activeUrl","imageType","imagePassword","e","loadAlbumList","albumListUrl","albumResult","albumName","albumUrl","list","handleNext","newActiveImageIndex","handlePrev","handleKey","which","keyCode","closeFullscreen","exitViewer","bookmarkIndex","handleClick","isInFullScreen","button","handleRightClick","handleWheel","deltaY","handleTouchStart","touchStartX","touches","clientX","touchStartY","clientY","handleTouchMove","JSON","stringify","currentX","currentY","diffX","diffY","Math","abs","showControls","classList","remove","add","timeout","clearTimeout","setTimeout","hideControls","handleFullscreenToggle","openFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","albumList","newAlbumList","newState","addEventListener","removeEventListener","handleTouchEnd","Canvas","App","toViewer","history","push","publicUrlPrefix","toLogin","defaultSite","defaultName","defaultPassword","path","render","ViewerScreen","component","LoginScreen","withRouter","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.168e108f.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst crypto = require('crypto');\r\nconst options = { algorithm: 'aes256' };\r\n\r\nclass MyCanvas extends React.Component {\r\n    // Important props:\r\n    // url - full path\r\n    // type - jpeg, png, gif\r\n    // password - Crypt password (optional)\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props); // url = full url to image \r\n        this.image = null;\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        //console.log(\"New URL: \" + this.props.url);\r\n        //console.log(\"Pre URL: \" + prevProps.url);\r\n        if (this.props.url === null && this.props.url === \"\") {\r\n            console.log(`Canvas::componnentDidUpdate - blank or null url`);\r\n            let canvas = document.getElementById(\"myCanvas\");\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = \"grey\";\r\n            ctx.fillRect(0,0,canvas.width,canvas.height);            \r\n        } else if (this.props.url === prevProps.url) {\r\n            \r\n            // All we need to do is re-render since the size probably changed\r\n            if (this.image === null) {\r\n                //console.log(\"Redraw existing image... but null, so skipping\");\r\n            } else {\r\n                console.log(\"Canvas::componnentDidUpdate - Redraw existing image\");\r\n                this.showImage(this.image);\r\n            }\r\n        } else {\r\n            // Do a full retreive and render\r\n            console.log(`Canvas::componentDidUpdatem- Full fetch and render`);\r\n            this.setImage(this.props.url);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(`Canvas::componentDidMount: ${this.props.url}`);\r\n        \r\n        if (this.props.url !== null && this.props.url !== \"\") {\r\n            this.setImage(this.props.url);\r\n        } \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log(`Canvas - componentWillUnmount: ${this.props.url}`);\r\n    }\r\n\r\n    setImage = async () => {\r\n        \r\n        if (this.props.url === \"\") {\r\n            console.log(`Canvas::setImage Blank url, Skipping.`);\r\n            return;\r\n        }\r\n        console.log(`Canvas::setImage Retreiving: ${this.props.url}`);\r\n        \r\n        try {\r\n            let listResult = await axios({\r\n                method: 'get',\r\n                url: this.props.url,\r\n                responseType: 'text',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            });\r\n\r\n            //console.log(listResult.data);\r\n\r\n            let encryptedData = new Buffer(listResult.data, 'base64');\r\n            let decryptedData = null;\r\n\r\n            if (this.props.password !== \"\") {\r\n                const cryptKey = crypto.createHash('sha256').update(String(this.props.password)).digest('base64').substr(0, 32); // 32 bytes\r\n                const iv = Buffer.alloc(16, 0); \r\n                var cipher = crypto.createDecipheriv(options.algorithm, cryptKey, iv);\r\n            \r\n                decryptedData = Buffer.from(cipher.update(encryptedData), 'binary');\r\n                decryptedData = Buffer.concat([decryptedData, cipher.final()]);\r\n            } else {\r\n                console.log(`Canvas::setImage: No key, Skipping decryption.`)\r\n                decryptedData = encryptedData\r\n            }\r\n\r\n            let image = new Image();\r\n            \r\n            image.onload = () => {\r\n                this.image = image;\r\n                this.showImage(image);\r\n            } \r\n\r\n            image.onerror = () => {\r\n                //console.log(`Canvas - onerror()`);\r\n                this.image = null;\r\n                let canvas = document.getElementById(\"myCanvas\");\r\n                canvas.width = window.innerWidth;\r\n                canvas.height = window.innerHeight;\r\n    \r\n                let ctx = canvas.getContext(\"2d\");\r\n                ctx.fillStyle = \"grey\";\r\n                ctx.fillRect(0,0,canvas.width,canvas.height);\r\n            }    \r\n            \r\n            image.src = \"data:image/\" + this.props.type + \";base64,\" + new Buffer(decryptedData).toString('base64');\r\n        } catch(error) {\r\n            console.error(`Viewer::loadImageList failed: ${error}`);\r\n        }\r\n    }\r\n\r\n    showImage = (image) => {\r\n        let canvas = document.getElementById(\"myCanvas\");\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        var wrh = image.width / image.height;\r\n        var newWidth = canvas.width;\r\n        var newHeight = newWidth / wrh;\r\n        if (newHeight > canvas.height) {\r\n            newHeight = canvas.height;\r\n            newWidth = newHeight * wrh;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n\r\n        if (newWidth < canvas.width) {\r\n            x = (canvas.width - newWidth) / 2;\r\n        }\r\n\r\n        if (newHeight < canvas.height) {\r\n            y = (canvas.height - newHeight) / 2;\r\n        }\r\n\r\n        //ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(image, x, y, newWidth, newHeight);\r\n    }\r\n\r\n    render() {\r\n        return (<canvas id=\"myCanvas\"></canvas>);\r\n    }\r\n}\r\n\r\nexport default MyCanvas;","import React from 'react';\r\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            site:     this.props.site,\r\n            name:     this.props.name,\r\n            password: this.props.password\r\n        };\r\n    }\r\n\r\n    setValue = (event) => {\r\n        switch (event.target.id) {\r\n            case \"siteForm\":\r\n                this.setState({ site: event.target.value });\r\n                break;\r\n            case \"nameForm\":\r\n                this.setState({ name: event.target.value });\r\n                break;\r\n            case \"passwordForm\":\r\n                this.setState({ password: event.target.value });\r\n                break;\r\n            default:\r\n                console.warn(`Login::setValue unexpected id: ${event.target.id}`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    validateForm = () => {\r\n        return this.state.name.length > 0 && this.state.password.length > 0;\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.updateCredentials(this.state.site, this.state.name, this.state.password);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"4\" />\r\n                        <Col sm=\"auto\"><h1>Khoto</h1></Col>\r\n                        <Col xs lg=\"4\" />\r\n                    </Row>\r\n                </Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group as={Row} controlId=\"siteForm\" >\r\n                        <Form.Label column sm={{ span: 2, offset: 1 }}>\r\n                            Site:\r\n                        </Form.Label>\r\n                        <Col sm={5}>\r\n                            <Form.Control type=\"text\" placeholder=\"host.com:12345\" value={this.state.site} onChange={this.setValue} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"nameForm\">\r\n                        <Form.Label column sm={{ span: 2, offset: 1 }}>\r\n                            Name:\r\n                        </Form.Label>\r\n                        <Col sm={5}>\r\n                            <Form.Control type=\"text\" value={this.state.name} onChange={this.setValue} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"passwordForm\">\r\n                        <Form.Label column sm={{ span: 2, offset: 1 }}>\r\n                            Password:\r\n                        </Form.Label>\r\n                        <Col sm={5}>\r\n                            <Form.Control type=\"password\" value={this.state.password} onChange={this.setValue} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"MessageFormLabel\">\r\n                        <Form.Label column sm={{ span: 5, offset: 3 }}>\r\n                            {this.props.loginMessage}\r\n                        </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                        <Col sm={{ span: 3, offset: 3 }}>\r\n                            <Button type=\"submit\" disabled={!this.validateForm()} >Submit</Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={{ span: 2, offset: 1 }}>\r\n                            {this.props.message}\r\n                        </Form.Label>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nfunction NextButton(props) {\r\n    return (\r\n        <button\r\n            id=\"nextButton\"\r\n            className=\"float-button-next\"\r\n            onClick={props.handleOnNext}>\r\n            &gt;\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default NextButton;","import React from 'react';\r\n\r\nfunction PrevButton(props) {\r\n    return (\r\n        <button\r\n            id=\"prevButton\"\r\n            className=\"float-button-prev\"\r\n            onClick={props.handleOnPrev}>\r\n            &lt;\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PrevButton;","import React from 'react';\r\n\r\nfunction AlbumSelect(props) {\r\n    const options = props.albums.map((album) =>\r\n        <option key={album} value={album} >{album}</option>,\r\n    );\r\n\r\n    return (\r\n        <select\r\n            id=\"albumSelect\"\r\n            className=\"float-select\"\r\n            value={props.selectedAlbum}\r\n            onChange={props.handleChange}>\r\n            {options}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default AlbumSelect;","/* eslint-disable no-useless-constructor */\r\nimport React from 'react';\r\n\r\nfunction Slider(props) {\r\n    return (\r\n        <div id=\"imageSlider\" className=\"slidecontainer\">\r\n            <input\r\n                className=\"slider\"\r\n                id=\"myRange\"\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max={props.max}\r\n                value={props.current}\r\n                onChange={props.handleChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nfunction ToggleButton(props) {\r\n    return (\r\n        <button\r\n            id=\"toggleButton\"\r\n            className=\"float-button-toggle\"\r\n            onClick={props.handleOnToggle}>\r\n            [ - ]\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ToggleButton;","import axios from 'axios';\r\nimport config from \"./config.json\";\r\n\r\n    // /api/user/:user/setting/key/:key\r\n    export async function loadSetting(host, user, key) {\r\n        let settingUrl = `${config.httpsProxy}http://${host}/api/user/${user}/setting/key/${key}`;\r\n        //console.log(`loadSetting: ${settingUrl}`);\r\n\r\n        let settingValue = \"\";\r\n\r\n        try {\r\n            let settingResult = await axios({\r\n                method: 'get',\r\n                url: settingUrl,\r\n                responseType: 'text',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            })\r\n            settingValue = settingResult.data;\r\n        } catch (error) {\r\n            console.log(`loadSetting caught for ${key}`)\r\n            settingValue = \"\";\r\n        }\r\n\r\n        if (typeof settingValue === undefined || settingValue === \"undefined\") {\r\n            console.log(`Settings::loadSetting query for user: ${user} and key: ${key} is undefined, setting to \"\"`);\r\n            settingValue = \"\";\r\n        }\r\n\r\n        console.log(`Settings::loadSetting result for ${key}: ${settingValue}`);\r\n        return settingValue;\r\n    }\r\n\r\n    // /api/user/:user/setting/key/:key/value/:value\r\n    export async function saveSetting(host, user, key, value) {\r\n        let settingUrl = `${config.httpsProxy}http://${host}/api/user/${user}/setting/key/${key}/value/${value}`;\r\n        //console.log(`saveSetting: ${settingUrl}`);\r\n        \r\n        // Fire and don't wait\r\n        try {\r\n            axios({\r\n                method: 'post',\r\n                url: settingUrl,\r\n                responseType: 'json',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            })\r\n        } catch (error) {\r\n            console.log(`Viewer::saveSetting failed: ${error}`)\r\n        }\r\n    }\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './App.css';\r\nimport Canvas from './components/Canvas';\r\nimport NextButton from './components/NextButton';\r\nimport PrevButton from './components/PrevButton';\r\nimport AlbumSelect from './components/AlbumSelect';\r\nimport Slider from \"./components/Slider\";\r\nimport ToggleButton from './components/ToggleButton';\r\n\r\nimport {loadSetting, saveSetting} from \"./Settings\";\r\nimport config from \"./config.json\";\r\n\r\n// First load - ComponenDidMount\r\n//   - Load the list of albums\r\n//       - Update state albumList\r\n//       - Update state activeAlbum\r\n//       - Load imageList\r\n//           - Update local imageList\r\n//           - Update state mageListLength\r\n//           - Update state activeImageIndex\r\n// HandleAlbumChange\r\n//   - Update state activeAlbum\r\n//       - Load imageList\r\n//           - Update local imageList\r\n//           - Update state mageListLength\r\n//           - Update state activeImageIndex\r\n\r\nclass Viewer extends React.Component {\r\n\r\n    // AlbumList []       - state  - Shared with Selec-\r\n    // imageList []       - local  - \r\n    // imageListLength    - state  - Shared with Slider\r\n    // activeAlbum        - state  - Shared with Select\r\n    // activeImageIndex   - state  - Shared with slider\r\n    // activeUrl          - state  - Shared with Canvas\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            baseUrl: `${config.httpsProxy}https://${this.props.site}/api/user/${this.props.name}`,\r\n            password: this.props.password,\r\n            activeUrl: \"\",\r\n            albumList: [\"\"],\r\n            activeAlbum: \"\",\r\n            activeImageIndex: 0,\r\n            imageListLength: 0,\r\n            imageType: \"\",\r\n            imagePassword: this.props.password\r\n        };\r\n\r\n        //console.log(`Viewer::Viewer - name=${this.props.name} password=${this.state.password}`);\r\n        if (this.props.name === \"\") {\r\n            console.warn(`No name.  Pushing to login`);\r\n            this.setState({ activeUrl: null });\r\n            this.props.exitViewer(\"No name\");\r\n        }\r\n        this.imageList = [];\r\n        this.timeout = null;\r\n\r\n        this.touchStartX = null;\r\n        this.touchStartY = null;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.timeout = setTimeout(() => {\r\n            this.hideControls();\r\n        }, 3000);\r\n\r\n        // Load the list of albums\r\n        try {\r\n            let newAlbumList = await this.loadAlbumList();\r\n\r\n            let newActiveAlbum = await loadSetting(this.props.site, this.props.name, \"lastAlbum\");\r\n            if (newActiveAlbum === \"\") {\r\n                newActiveAlbum = newAlbumList[0];\r\n                saveSetting(this.props.site, this.props.name, \"lastAlbum\", newActiveAlbum);\r\n            }\r\n            this.imageList = await this.loadImageList(newActiveAlbum);\r\n\r\n            let newActiveImageIndex = await loadSetting(this.props.site, this.props.name, \"lastIndex\");\r\n            if (newActiveImageIndex === \"\") {\r\n                console.log(`Viewer::componentDidMount: newActiveImageIndex blank, setting to 0`)\r\n                newActiveImageIndex = 0;\r\n            }\r\n\r\n            this.bookmarkIndex = newActiveImageIndex;\r\n\r\n            // console.log(`Viewer::componentDidMount album=${newActiveAlbum} Index= ${newActiveImageIndex} - assigning new Image Url`);\r\n            this.assignNewImageUrl(newActiveAlbum, newActiveImageIndex);\r\n\r\n            let newState = {\r\n                albumList: newAlbumList,\r\n            };\r\n\r\n            this.setState(newState);\r\n\r\n        } catch (error) {\r\n            // handle error\r\n            console.error(`Viewer::componentDidMount Catch = ${error}.  Pushing to login`);\r\n            if (this.timeout !== null) {\r\n                clearTimeout(this.timeout);\r\n                this.timeout = null;\r\n            }\r\n\r\n            this.setState({ activeUrl: null });\r\n            this.props.exitViewer(\"No access\");\r\n        };\r\n\r\n        document.addEventListener('keydown', this.handleKey);\r\n        document.addEventListener('wheel', this.handleWheel);\r\n        document.addEventListener('mousemove', this.showControls);\r\n        document.addEventListener('mousedown', this.handleClick);\r\n        document.addEventListener('contextmenu', this.handleRightClick);\r\n        document.addEventListener('touchstart', this.handleTouchStart);\r\n        document.addEventListener('touchmove', this.handleTouchMove);\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKey);\r\n        document.removeEventListener('wheel', this.handleWheel);\r\n        document.removeEventListener('mousemove', this.showControls);\r\n        document.removeEventListener('mousedown', this.handleClick);\r\n        document.removeEventListener('contextmenu', this.handleRightClick);\r\n        document.removeEventListener('touchstart', this.handleTouchStart);\r\n        document.removeEventListener('touchend', this.handleTouchEnd);\r\n\r\n        window.removeEventListener('resize', this.handleResize);\r\n\r\n        if (this.timeout !== null) {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = null;\r\n        }\r\n    }\r\n\r\n    handleAlbumChange = async (event) => {\r\n        let newActiveAlbum = event.target.value;\r\n        console.log(`New Album selected:`, newActiveAlbum);\r\n\r\n        saveSetting(this.props.site, this.props.name, \"lastAlbum\", newActiveAlbum);\r\n\r\n        this.imageList = await this.loadImageList(newActiveAlbum);\r\n\r\n        console.log(`Viewer::handleAlbumChange album=${newActiveAlbum} Index= 0 - assigning new Image Url`);\r\n        this.assignNewImageUrl(newActiveAlbum, 0);\r\n    };\r\n\r\n    handleSliderChange = (event) => {\r\n        console.log(`Viewer::handlSliderChange - New: ${event.target.value}, Max: ${this.state.imageListLength}`);\r\n        this.assignNewImageUrl(this.state.activeAlbum, event.target.value);\r\n    }\r\n\r\n    // Redisplay the current image.  This will recompute the coordinates and rescale\r\n    handleResize = () => {\r\n        //console.log(\"Viewer::handleResize\");\r\n        this.assignNewImageUrl(this.state.activeAlbum, this.state.activeImageIndex);\r\n    }\r\n\r\n    // Computes the image URL for the canvas to use and update all of the related state.\r\n    assignNewImageUrl = (album, index) => {\r\n        //console.log(`Viewer::assignNewImageUrl: user=${this.props.name} album=${album} index=${index} image=${this.imageList[index]}`)\r\n        saveSetting(this.props.site, this.props.name, \"lastIndex\", index);\r\n\r\n        var imageUrl = `${this.state.baseUrl}/base64Image/albumName/${album}/imageName/${this.imageList[index]}`;\r\n\r\n        let newType = \"\";\r\n        let newImagePassword = this.state.password;\r\n        try {\r\n            if (this.imageList[index].endsWith(\"daj\")) {\r\n                newType = \"jpeg\";\r\n            } else if (this.imageList[index].endsWith(\"dag\")) {\r\n                newType = \"gif\";\r\n            } else if (this.imageList[index].endsWith(\"dap\")) {\r\n                newType = \"png\";\r\n            } else if (this.imageList[index].endsWith(\"jpeg\")) {\r\n                newType = \"jpeg\";\r\n                newImagePassword = \"\";\r\n            } else if (this.imageList[index].endsWith(\"jpg\")) {\r\n                newType = \"jpeg\";\r\n                newImagePassword = \"\";\r\n            } else if (this.imageList[index].endsWith(\"png\")) {\r\n                newType = \"png\";\r\n                newImagePassword = \"\";\r\n            } else if (this.imageList[index].endsWith(\"gif\")) {\r\n                newType = \"gif\";\r\n                newImagePassword = \"\";\r\n            }\r\n\r\n            //console.log(`Viewer::assignNewImageUrl [${index}] ${imageUrl}`)\r\n            // This causes a re-render and our canvas gets the activeUrl\r\n            this.setState({\r\n                activeUrl: imageUrl,\r\n                imageType: newType,\r\n                activeAlbum: album,\r\n                imageListLength: this.imageList.length,\r\n                activeImageIndex: index,\r\n                imagePassword: newImagePassword\r\n            });\r\n        } catch (e) {\r\n            console.error(`Viewer::assignNewImageUrl failed, skipping ${e}`);\r\n        }\r\n    }\r\n\r\n    // Synchronous retreival of the album list\r\n    loadAlbumList = async () => {\r\n        let albumListUrl = this.state.baseUrl + \"/albums\";\r\n        //console.log(\"Viewer loadAlbumList albumUrl: \" + albumListUrl);\r\n\r\n        // Load the list of albums\r\n        let albumResult = await axios({\r\n            method: 'get',\r\n            url: albumListUrl,\r\n            responseType: 'json',\r\n            headers: { 'Access-Control-Allow-Origin': '*' }\r\n        })\r\n\r\n        return albumResult.data;\r\n    }\r\n\r\n    // Syncrhonous retrevial of the image list\r\n    loadImageList = async (albumName) => {\r\n        var albumUrl = this.state.baseUrl + \"/album/albumName/\" + albumName;\r\n        //console.log(\"Viewer loadImageList albumUrl: \" + albumUrl);\r\n\r\n        let list = [];\r\n        try {\r\n            let listResult = await axios({\r\n                method: 'get',\r\n                url: albumUrl,\r\n                responseType: 'json',\r\n                headers: { 'Access-Control-Allow-Origin': '*' }\r\n            });\r\n            list = listResult.data;\r\n        } catch (error) {\r\n            //console.log(`Viewer::loadImageList failed: ${error}`)\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    // Called when a user actions (click, key or wheel) say to go to the next image\r\n    handleNext = () => {\r\n        //console.log(\"App: onNext, index: \" + this.state.activeImageIndex);\r\n\r\n        if (this.state.activeImageIndex < this.state.imageListLength - 1) {\r\n            let newActiveImageIndex = this.state.activeImageIndex;\r\n            // Adding 1 to activeImageIndex on the line above sometimes produced \"01\"\r\n            newActiveImageIndex++;\r\n\r\n            this.assignNewImageUrl(this.state.activeAlbum, newActiveImageIndex);\r\n        }\r\n    }\r\n\r\n    // Called when a user actions (click, key or wheel) say to go to the previous image\r\n    handlePrev = () => {\r\n        //console.log(\"App: onPrev, index: \" + this.state.activeImageIndex);\r\n\r\n        if (this.state.activeImageIndex > 0) {\r\n            let newActiveImageIndex = this.state.activeImageIndex;\r\n            newActiveImageIndex--;\r\n\r\n            this.assignNewImageUrl(this.state.activeAlbum, newActiveImageIndex);\r\n        }\r\n    }\r\n\r\n    // Handle an event from the keyboard.  \r\n    // Right arrow and space advance\r\n    // Left arrow rewinds\r\n    // ESC exits full screen.\r\n    handleKey = (event) => {\r\n        var x = event.which || event.keyCode;\r\n\r\n        // space: 32       Enter: 13     Esc:   27\r\n        // Up:    38       Down:  40\r\n        // Right: 39       Left:  37\r\n\r\n        if (x === 32 || x === 39) { // Right arrow or space\r\n            this.handleNext();\r\n        } else if (x === 37) {      // Back Arrow\r\n            this.handlePrev();\r\n        } else if (x === 27) {      // ESC\r\n            this.closeFullscreen();\r\n        } else if (x === 81) {      // 'q'\r\n            this.setState({ activeUrl: null });\r\n            this.props.exitViewer(\"Logout\");\r\n        } else if (x === 66) {      // 'b'\r\n            this.bookmarkIndex = this.state.activeImageIndex;\r\n        } else if (x === 71) {      // 'g'\r\n            this.assignNewImageUrl(this.state.activeAlbum, this.bookmarkIndex);\r\n        }\r\n    }\r\n\r\n    // This is the handler for the mouse buttons.  In full screen it can be used to \r\n    // advance, rewind or logout  \r\n    handleClick = (event) => {\r\n        if (this.isInFullScreen()) {\r\n            //console.log(\"Viewer::onClick\", event.button);\r\n            if (event.button === 0) {\r\n                this.handlePrev();\r\n            } else if (event.button === 1) {\r\n                //this.props.history.push(process.env.PUBLIC_URL + \"/\");\r\n                this.setState({ activeUrl: null });\r\n                this.props.exitViewer(\"Logout\");\r\n            } else if (event.button === 2) {\r\n                this.handleNext();\r\n            }\r\n        } else {\r\n            // console.log(\"Skipping mouse click when not in full screen\")\r\n        }\r\n    }\r\n\r\n    // We don't need the context menu\r\n    handleRightClick = (event) => {\r\n        // Disable the regular context menu\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Handle whell events to advance or rewind the image flow\r\n    handleWheel = (event) => {\r\n        //console.log(\"Viewer::onWheel: \", event);\r\n\r\n        if (event.deltaY < 0) {\r\n            this.handlePrev();\r\n        } else if (event.deltaY > 0) {\r\n            this.handleNext();\r\n        } else {\r\n            console.warn(\"Viewer::onWheel - not an up/down\");\r\n        }\r\n    }\r\n\r\n    handleTouchStart = (event) => {\r\n        event.preventDefault();\r\n        this.touchStartX = event.touches[0].clientX;\r\n        this.touchStartY = event.touches[0].clientY;\r\n\r\n        console.log(`TouchStart - X=${this.touchStartX} Y=${this.touchStartY}`);\r\n\r\n    }\r\n\r\n    handleTouchMove = (event) => {\r\n        console.log(\"handleTouchEnd: \" + JSON.stringify(event, undefined, 2))\r\n        event.preventDefault();\r\n\r\n        var currentX = event.touches[0].clientX;\r\n        var currentY = event.touches[0].clientY;\r\n\r\n        console.log(`TouchEnd - X=${currentX} Y=${currentY}`);\r\n\r\n        if (this.touchStartX === null) {\r\n            console.log(\"No initial X\");\r\n            return;\r\n        }\r\n\r\n        if (this.touchStartY === null) {\r\n            console.log(\"No initial Y\");\r\n            return;\r\n        }\r\n\r\n        var diffX = this.touchStartX - currentX;\r\n        var diffY = this.touchStartY - currentY;\r\n\r\n        if (Math.abs(diffX) > Math.abs(diffY)) {\r\n            // sliding horizontally\r\n            if (diffX > 0) {\r\n                // swiped left\r\n                console.log(\"swiped left\");\r\n                this.handleNext();\r\n            } else {\r\n                // swiped right\r\n                console.log(\"swiped right\");\r\n                this.handlePrev();\r\n            }\r\n        } else {\r\n            // sliding vertically\r\n            if (diffY > 0) {\r\n                // swiped up\r\n                console.log(\"swiped up\");\r\n                this.props.exitViewer(\"Logout\");\r\n            } else {\r\n                // swiped down\r\n                console.log(\"swiped down\");\r\n            }\r\n        }\r\n    \r\n        this.touchStartX = null;\r\n        this.touchStartY = null;\r\n    }\r\n\r\n    showControls = () => {\r\n        try {\r\n            if (!this.isInFullScreen()) {\r\n                document.getElementById(\"prevButton\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"nextButton\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"albumSelect\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"imageSlider\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"toggleButton\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"prevButton\").classList.add(\"k-fadeIn\");\r\n                document.getElementById(\"nextButton\").classList.add(\"k-fadeIn\");\r\n                document.getElementById(\"albumSelect\").classList.add(\"k-fadeIn\");\r\n                document.getElementById(\"imageSlider\").classList.add(\"k-fadeIn\");\r\n                document.getElementById(\"toggleButton\").classList.add(\"k-fadeIn\");\r\n            } else {\r\n                // just the slider\r\n                document.getElementById(\"imageSlider\").classList.remove(\"k-fadeOut\");\r\n                document.getElementById(\"imageSlider\").classList.add(\"k-fadeIn\");\r\n            }\r\n\r\n            // Here we use a class variable (this.timeout) because we don't want to trigger \r\n            // a re-render that would happen if we changed a state variable.\r\n            if (this.timeout !== null) {\r\n                clearTimeout(this.timeout);\r\n                this.timeout = null;\r\n            }\r\n\r\n            this.timeout = setTimeout(() => {\r\n                this.hideControls();\r\n            }, 2000);\r\n        } catch (e) { }\r\n    }\r\n\r\n    hideControls = () => {\r\n        try {\r\n            document.getElementById(\"prevButton\").classList.remove(\"k-fadeIn\");\r\n            document.getElementById(\"nextButton\").classList.remove(\"k-fadeIn\");\r\n            document.getElementById(\"albumSelect\").classList.remove(\"k-fadeIn\");\r\n            document.getElementById(\"imageSlider\").classList.remove(\"k-fadeIn\");\r\n            document.getElementById(\"toggleButton\").classList.remove(\"k-fadeIn\");\r\n            document.getElementById(\"prevButton\").classList.add(\"k-fadeOut\");\r\n            document.getElementById(\"nextButton\").classList.add(\"k-fadeOut\");\r\n            document.getElementById(\"albumSelect\").classList.add(\"k-fadeOut\");\r\n            document.getElementById(\"imageSlider\").classList.add(\"k-fadeOut\");\r\n            document.getElementById(\"toggleButton\").classList.add(\"k-fadeOut\");\r\n        } catch (e) { }\r\n    }\r\n\r\n    handleFullscreenToggle = () => {\r\n        if (this.isInFullScreen()) {\r\n            this.closeFullscreen();\r\n        } else {\r\n            this.openFullscreen();\r\n        }\r\n    }\r\n\r\n    isInFullScreen = () => {\r\n        return (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n            (document.webkitFullscreenElement && document.webkitFullscreenElement !== null) ||\r\n            (document.mozFullScreenElement && document.mozFullScreenElement !== null) ||\r\n            (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    }\r\n\r\n    openFullscreen = () => {\r\n        //console.log(\"openFullScreen\");\r\n        var docElm = document.documentElement;\r\n\r\n        if (docElm.requestFullscreen) {\r\n            docElm.requestFullscreen();\r\n        } else if (docElm.mozRequestFullScreen) {\r\n            docElm.mozRequestFullScreen();\r\n        } else if (docElm.webkitRequestFullScreen) {\r\n            docElm.webkitRequestFullScreen();\r\n        } else if (docElm.msRequestFullscreen) {\r\n            docElm.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    /* Close fullscreen */\r\n    closeFullscreen = () => {\r\n        //console.log(\"closeFullScreen\");\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n    }\r\n\r\n    // The tabIndex=\"0\" is needed to get onKeyDown to work\r\n    //onKeyDown={this.onKey}\r\n    //            onMouseMove={this.onShow}\r\n    //            tabIndex=\"0\"\r\n    render() {\r\n        // console.log(\"Viewer::render\");\r\n        return (\r\n            <div id=\"myViewer\" className=\"Viewer\">\r\n                <AlbumSelect\r\n                    selectedAlbum={this.state.activeAlbum}\r\n                    handleChange={this.handleAlbumChange}\r\n                    albums={this.state.albumList}\r\n                />\r\n\r\n                <Canvas url={this.state.activeUrl} password={this.state.imagePassword} type={this.state.imageType} />\r\n\r\n                <NextButton handleOnNext={this.handleNext} />\r\n\r\n                <PrevButton handleOnPrev={this.handlePrev} />\r\n\r\n                <Slider max={this.state.imageListLength - 1} current={this.state.activeImageIndex} handleChange={this.handleSliderChange} />\r\n\r\n                <ToggleButton handleOnToggle={this.handleFullscreenToggle} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Viewer;","import React from \"react\";\r\nimport {\r\n    Switch,\r\n    withRouter,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport LoginScreen from \"./LoginScreen\"\r\nimport ViewerScreen from \"./ViewerScreen\"\r\n\r\nimport config from \"./config.json\";\r\n\r\n// class Viewer extends React.Component {\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            site:     config.defaultSite,\r\n            name:     config.defaultName,\r\n            password: config.defaultPassword,\r\n            publicUrlPrefix: config.publicUrlPrefix,\r\n            toViewer: false,\r\n            toLogin: false,\r\n            loginMessage: \"Let's get started\"\r\n        };\r\n    }\r\n\r\n    updateCredentials = (site, name, password) => {\r\n        console.log(`App::updateCredentials: site = ${site}, name = ${name}, password = ${password}`);\r\n        this.setState({ site: site, name: name, password: password, toViewer: true });\r\n        this.props.history.push(this.state.publicUrlPrefix + '/viewer');\r\n    }\r\n\r\n    exitViewer = (message) => {\r\n        console.log(`App::exitViewer: message=${message}`);\r\n        this.setState({ loginMessage: message, toLogin: true });\r\n        this.props.history.push(this.state.publicUrlPrefix + '/');\r\n    }\r\n\r\n    // The real workhorse of React Router is the History library. Under the hood, it’s what’s keeping track \r\n    // of session history for React Router. When a component is rendered by React Router, \r\n    // that component is passed three different props: location, match, and history. This history prop comes \r\n    // from the History library and has a ton of fancy properties on it related to routing. In this case, \r\n    // the one we’re interested in is history.push. What it does is it pushes a new entry into the history stack \r\n    // - aka redirecting the user to another route.\r\n    // The {...props} below pushs all the props down to the subordinate screens including 'history' OR NOT\r\n    render() {\r\n        // console.log(`App::render - PUBLIC_URL=${this.state.publicUrlPrefix}`)\r\n\r\n        // Total fail.  This seems like the most straight forward way to do this\r\n        // if (this.state.toViewer) {\r\n        //     console.log(\"App:render - Redirect to viewer\")\r\n        //     return <Redirect to=\"/viewer\" />\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\r\n                <Switch>\r\n                    <Route path={this.state.publicUrlPrefix + \"/viewer\"}\r\n                        render={(props) =>\r\n                            <ViewerScreen {...props}\r\n                                site={this.state.site}\r\n                                name={this.state.name}\r\n                                password={this.state.password}\r\n                                exitViewer={this.exitViewer}\r\n                                component={ViewerScreen} />\r\n                        }\r\n                    />\r\n                    <Route path={this.state.publicUrlPrefix + \"/\"}\r\n                        render={(props) =>\r\n                            <LoginScreen {...props}\r\n                                site={this.state.site}\r\n                                name={this.state.name}\r\n                                password={this.state.password}\r\n                                publicUrlPrefix={this.state.publicUrlPrefix}\r\n                                loginMessage={this.state.loginMessage}\r\n                                updateCredentials={this.updateCredentials} />\r\n                        }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// The \"withRouter\" here makes it so that history is added to our props for the push redirect call\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//ReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        < App />\r\n    </Router>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); "],"sourceRoot":""}